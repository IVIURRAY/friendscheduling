# Multi-stage build for production deployment
FROM eclipse-temurin:21-jdk AS builder

WORKDIR /app

# Copy Gradle wrapper and build files from backend directory
COPY backend/gradlew .
COPY backend/gradle gradle
COPY backend/build.gradle.kts .
COPY backend/settings.gradle.kts .

# Make gradlew executable and test it
RUN chmod +x ./gradlew && ./gradlew --version

# Download dependencies (cached layer)
RUN ./gradlew dependencies --no-daemon

# Copy source code from backend directory
COPY backend/src src

# Build the application
RUN ./gradlew clean build -x test --no-daemon && \
    ls -la build/libs/

# Production stage - smaller runtime image
FROM eclipse-temurin:21-jre

WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy the built JAR from builder stage
COPY --from=builder /app/build/libs/demo-0.0.1-SNAPSHOT.jar app.jar

# Create non-root user for security
RUN addgroup --system --gid 1001 appgroup && \
    adduser --system --uid 1001 --gid 1001 appuser && \
    chown appuser:appgroup app.jar

USER appuser

# Expose port (Railway will override with $PORT)
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:${PORT:-8080}/actuator/health || exit 1

# Run the application with dynamic port support
CMD ["sh", "-c", "java -Dserver.port=${PORT:-8080} -jar app.jar"]
